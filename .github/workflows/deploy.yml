name: Production Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  EKS_CLUSTER_NAME: idempiere-prod-cluster

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Terraform Init
      working-directory: terraform
      run: terraform init

    - name: Terraform Plan
      working-directory: terraform
      run: terraform plan

    # - name: Terraform Apply (Manual Approval)
    #   if: github.ref == 'refs/heads/main'
    #   working-directory: terraform
    #   run: terraform apply -auto-approve
    #   env:
    #     TF_VAR_environment: prod

  # kubernetes:
  #   name: Kubernetes Deployment
  #   needs: terraform
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout repo
  #     uses: actions/checkout@v3

  #   - name: Configure AWS credentials
  #     uses: aws-actions/configure-aws-credentials@v4
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-region: ${{ env.AWS_REGION }}

  #   - name: Install kubectl
  #     uses: azure/setup-kubectl@v3

  #   - name: Update kubeconfig for EKS
  #     run: aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME

  #   - name: Deploy to Kubernetes
  #     working-directory: kubernetes
  #     run: |
  #       kubectl apply -f namespace.yaml
  #       kubectl apply -f storageclass.yaml
  #       kubectl apply -f secrets.yaml
  #       kubectl apply -f service.yaml
  #       kubectl apply -f headless-service.yaml
  #       kubectl apply -k "github.com/kubernetes-sigs/aws-ebs-csi-driver/deploy/kubernetes/overlays/stable/ecr/?ref=release-1.28"
  #       kubectl apply -f aurora-bootstrap-job.yaml
  #       kubectl apply -f mongodb-statefulset.yaml
  #       kubectl apply -f mongodb-job.yaml
  #       kubectl apply -f deployment.yaml
  #       kubectl apply -f clusterrole.yaml
  #       kubectl apply -f clusterautoscaler.yaml
  #       kubectl apply -f hpa.yaml
  #       kubectl apply -f networkpolicy.yaml

  #   - name: Verify pods are running
  #     run: |
  #       kubectl get pods -A
